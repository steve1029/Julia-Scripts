% Compute the local stiffness matrices

function stiff_local = compute_stiff_local(dof_pos, quad_weights, act_quad_pos, ev, evder, num_edges)

% Number of elements
num_elements = num_edges - 1;

% Initialize storage of local stiffness matrices
stiff_local = zeros(num_elements, 9);

% Go through each element
for i = 1 : 1 : num_elements
    
    % Go through each shape function
    for k = 1 : 1 : 2
        
        stiff_local(i,1) = stiff_local(i,1) ...
            + ((dof_pos(i + 1) - dof_pos(i)) ^ -1) * quad_weights(k) ...
            * a_def(act_quad_pos(k,i)) * evder(1,k) * evder(1,k) ...
            + (dof_pos(i + 1) - dof_pos(i)) * quad_weights(k) ...
            * ev(1,k) * ev(1,k);
        
        stiff_local(i,2) = stiff_local(i,2) ...
            + ((dof_pos(i + 1) - dof_pos(i)) ^ -1) * quad_weights(k) ...
            * a_def(act_quad_pos(k,i)) * evder(1,k) * evder(2,k) ...
            + (dof_pos(i + 1) - dof_pos(i)) * quad_weights(k) ...
            * ev(1,k) * ev(2,k);
        
        stiff_local(i,3) = stiff_local(i,3) ...
            + ((dof_pos(i + 1) - dof_pos(i)) ^ -1) * quad_weights(k) ...
            * a_def(act_quad_pos(k,i)) * evder(2,k) * evder(1,k) ...
            + (dof_pos(i + 1) - dof_pos(i)) * quad_weights(k) ...
            * ev(2,k) * ev(1,k);
        
        stiff_local(i,4) = stiff_local(i,4) ...
            + ((dof_pos(i + 1) - dof_pos(i)) ^ -1) * quad_weights(k) ...
            * a_def(act_quad_pos(k,i)) * evder(2,k) * evder(2,k) ...
            + (dof_pos(i + 1) - dof_pos(i)) * quad_weights(k) ...
            * ev(2,k) * ev(2,k);
        
    end
    
end

end